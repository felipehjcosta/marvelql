buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:$gradle_testsets_plugin"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'application'
apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: "org.unbroken-dome.test-sets"

group 'marvelql'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

testSets {
    integrationTest
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    integrationTest.kotlin.srcDirs = ['integrationTest']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testResources']
    integrationTest.resources.srcDirs = ['integrationTestResources']
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

check.dependsOn integrationTest

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"
    compile "com.github.pgutkowski:kgraphql:$kgraphql_version"
    compile "ch.qos.logback:logback-classic:$logback_version"

    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-client-json-jvm:$ktor_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_version"

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

detekt {
    toolVersion = "1.0.0-RC12"
    input = files("src")
    filters = ".*/resources/.*,.*/build/.*"
    config = files("default-detekt-config.yml")
}

run.doFirst {
    environment 'MARVEL_PUBLIC_KEY', MARVEL_PUBLIC_KEY
    environment 'MARVEL_PRIVATE_KEY', MARVEL_PRIVATE_KEY
}
